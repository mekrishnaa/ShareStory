{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krishna.kumar2\\\\Desktop\\\\Memories App\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { GoogleLogin } from 'react-google-login';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignup(preIsSignup => !preIsSignup);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {}\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = async error => {\n    console.log(error);\n    console.log('Google SignIn was unsuccessful. Try Again Later');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstname\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastname\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? \"Sign Up\" : \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"626121231612-efb22sucsj9b9n72rbog92cf9pn44ei9.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disable: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 168\n            }, this),\n            variant: \"contained\",\n            children: \" Google Sign In \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: [\" \", isSignup ? \"Already Have Account? Sign In\" : \"Don't Have an account? SignUp\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Auth, \"Z6OHB1x8AhEiU3SuExSSLrwDAqI=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/krishna.kumar2/Desktop/Memories App/client/src/components/Auth/Auth.js"],"names":["React","useState","useDispatch","Avatar","Button","Paper","Grid","Typography","Container","TextField","LockOutlinedIcon","GoogleLogin","useStyles","Input","Icon","Auth","classes","dispatch","showPassword","setShowPassword","isSignup","setIsSignup","handleSubmit","handleChange","handleShowPassword","prevShowPassword","switchMode","preIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","error","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport {useDispatch} from 'react-redux'; \r\nimport {Avatar, Button, Paper, Grid, Typography, Container, TextField} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {GoogleLogin} from 'react-google-login'; \r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\nimport Icon from './Icon';\r\nconst Auth = ()=> {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [showPassword,setShowPassword] = useState(false);\r\n    const[isSignup,setIsSignup] = useState(false);\r\n    const handleSubmit = ()=>{\r\n        \r\n    };\r\n    const handleChange = ()=>{\r\n\r\n    };\r\n    const handleShowPassword = ()=> setShowPassword((prevShowPassword)=> !prevShowPassword);\r\n    const switchMode = () =>{ \r\n        setIsSignup(preIsSignup=> !preIsSignup);\r\n        handleShowPassword(false);\r\n    };\r\n    const googleSuccess = async(res) =>{\r\n        const result = res?.profileObj;\r\n        const token  = res?.tokenId;\r\n        try {\r\n            dispatch({type:'AUTH', data:{}})\r\n        } catch (error) {\r\n            console.log(error);\r\n        } \r\n    };\r\n    const googleFailure = async(error) =>{\r\n        console.log(error);\r\n        console.log('Google SignIn was unsuccessful. Try Again Later');\r\n    };\r\n\r\n    return (\r\n       <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography variant=\"h5\">{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        {\r\n                            isSignup && (\r\n                                <>\r\n                                    \r\n                                    <Input name=\"firstname\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                                    <Input name=\"lastname\" label=\"Last Name\" handleChange={handleChange} half />\r\n                                    \r\n                                </>\r\n                            )\r\n                        }\r\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\r\n                        {isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password \"  />}\r\n                    </Grid>\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                    {isSignup ? \"Sign Up\" : \"Sign In\"} \r\n                    </Button>\r\n                    <GoogleLogin \r\n                        clientId=\"626121231612-efb22sucsj9b9n72rbog92cf9pn44ei9.apps.googleusercontent.com\"\r\n                        render={(renderProps)=> (\r\n                            <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disable={renderProps.disabled} startIcon={<Icon />} variant=\"contained\"> Google Sign In </Button>)}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy =\"single_host_origin\"\r\n                    />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Button onClick={switchMode}> {isSignup ? \"Already Have Account? Sign In\" : \"Don't Have an account? SignUp\"}</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n        )\r\n    \r\n}\r\n    \r\nexport default Auth;\r\n                                  \r\n                                    \r\n"]},"metadata":{},"sourceType":"module"}